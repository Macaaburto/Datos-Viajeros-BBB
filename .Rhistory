y = suma(x*Multiplo)
z = 11 - y + piso (y/11)*11
clave = c(1:11)
val = c(1:9,"k",0)
dv = val[coincidencia(z, clave)]
return(dv)
}
dv<-function(rut){
rut=as.character(rut)
x=as.numeric(rev(strsplit(rut,NULL)[[1]]))
Multiplo=rep(2:7,length.out=length(x))
y = suma(x*Multiplo)
z = 11 - y + piso (y/11)*11
clave = c(1:11)
val = c(1:9,"k",0)
dv = val[coincidencia(z, clave)]
return(dv)
}
dv<-function(rut){
rut=as.character(rut)
x=as.numeric(rev(strsplit(rut,NULL)[[1]]))
Multiplo=rep(2:7,length.out=length(x))
y = suma(x*Multiplo)
z = 11 - y + piso (y/11)*11
clave = c(1:11)
val = c(1:9,"k",0)
dv = val[coincidencia(z, clave)]
return(dv)
}
RUTs_validos  <-  lista ()
para ( i  en la muestra ( 0000000 : 9999999 , 5000 , replace = F )) {
rut <- print (pegar ( i , " - " , dv ( i )))
Ruts_validos <- c ( Ruts_validos , rut )
}
# t: tiempo que se demora en ejecutar un codigo
# def t: tiempo que se demora en recorrer la lista Ruts_validos
t  <- proc.time ()
para ( rut  en  Ruts_validos ) {
impresión ( rutina )
}
proc.time () -  t
* / sistema de usuario   transcurrido
5.11     0.06     5.17    / *
# R: El tiempo de ejecucion del cod es 5.17 segundos
para ("i" en la muestra(0000000:9999999,5000,replace=F)){
dv<-function(rut){
rut=as.character(rut)
x=as.numeric(rev(strsplit(rut,NULL)[[1]]))
Multiplo=rep(2:7,length.out=length(x))
y = suma(x*Multiplo)
z = 11 - y + piso (y/11)*11
clave = c(1:11)
val = c(1:9,"k",0)
dv = val[coincidencia(z, clave)]
return(dv)
}
clientes <- list (list(1,"Maca",-35000),list(2,"Patricio",-67500),list(3,"Aracely",1550),list(4,"Veronica",-28000))
contarSaldoNegativo(clientes)
contarSaldoNegativo <- function(listaclientes){
GenteSaldoNegativo <- 0
for (cliente in listaclientes){
if (cliente[3] < 0){
GenteSaldoNegativo<- (GenteSaldoNegativo+1)
}
}
return(GenteSaldoNegativo)
contarSaldoNegativo(clientes)
contarSaldoNegativo(clientes)
sinVocales <- function(oracion){
stringsinvocales <- ""
strspliteada <- strsplit(oracion, "")[[1]]
for (letra in strspliteada){
if(letra != "a" && letra != "e" && letra != "i" && letra != "o" && letra != "u" && letra != "A" && letra != "E"
&& letra != "I" && letra != "O" && letra != "U") {
stringsinvocales <- paste(stringsinvocales, letra, sep="")
}
}
return(stringsinvocales)
}
Frase <- "Chile campeon"
sinVocales(Frase)
Frase_2 <- "El partido termino con 0 goles"
sinVocales(Frase_2)
Digito_verificador <- function(rut){
rut = as.character(rut)
x = as.numeric(rev(strsplit(rut,NULL)[[1]]))
Multiplo = rep(2:7,length.out=length(x))
y = sum(x*Multiplo)
z = 11 - y + floor(y/11)*11
key = c(1:11)
val = c(1:9,"k",0)
Digito_verificador = val[match(z, key)]
return(Digito_verificador)
}
Digito_verificador(18947362)
Digito_verificador(8315225)
Digito_verificador(8919162)
Digito_verificador(19186427)
Digito_verificador(17835666)
tiempo<- proc.time()
Ruts <- list()
for(i in sample(0000000:9999999,5000,replace=F)){
rut<- print(paste(i,"-",Digito_verificador(i)))
Ruts <-c(Ruts,rut)
}
proc.time() - tiempo
proc.time() - tiempo
" Funciones"
source ('Funciones.R')
# Ejercicio n°5
"Receta de diseño"
"digito_verificador: int -> int"
"Definicion digito_verificador: la función entrega rut validos "
"Ejemplo: digito_verificador (18947362) ->1"
Digito_verificador <- function(rut){
rut = as.character(rut)
x = as.numeric(rev(strsplit(rut,NULL)[[1]]))
Multiplo = rep(2:7,length.out=length(x))
y = sum(x*Multiplo)
z = 11 - y + floor(y/11)*11
key = c(1:11)
val = c(1:9,"k",0)
Digito_verificador = val[match(z, key)]
return(Digito_verificador)
}
Digito_verificador(18947362)
"Test"
Digito_verificador(8315225)
Digito_verificador(8919162)
Digito_verificador(19186427)
Digito_verificador(17835666)
"Receta de diseño"
"Definicion de tiempo: Calcular el tiempo que se demora en codificar Ruts "
"Definicion de Ruts: Crea una lista de 5000 numeros de ruts aleatorios unicos con su
digito verificador, todos estos sin repetición "
tiempo<- proc.time()
Ruts <- list()
for(i in sample(0000000:9999999,5000,replace=F)){
rut<- print(paste(i,"-",Digito_verificador(i)))
Ruts <-c(Ruts,rut)
}
proc.time() - tiempo
tiempo<- proc.time()
Ruts <- list()
for(i in sample(0000000:9999999,5000,replace=F)){
rut<- print(paste(i,"-",Digito_verificador(i)))
Ruts <-c(Ruts,rut)
}
proc.time() - tiempo
Digito_verificador <- function(rut){
rut = as.character(rut)
x = as.numeric(rev(strsplit(rut,NULL)[[1]]))
Multiplo = rep(2:7,length.out=length(x))
y = sum(x*Multiplo)
z = 11 - y + floor(y/11)*11
key = c(1:11)
val = c(1:9,"k",0)
Digito_verificador = val[match(z, key)]
return(Digito_verificador)
}
#dv: int -> int
#Def dv: funcion para generar digito verificador para un rut valido
#Ejemplo: dv(18749743)->4
dv <- function(rut){
rut = as.character(rut)
x = as.numeric(rev(strsplit(rut,NULL)[[1]]))
Multiplo = rep(2:7,length.out=length(x))
y = sum(x*Multiplo)
z = 11 - y + floor(y/11)*11
key = c(1:11)
val = c(1:9,"k",0)
dv = val[match(z, key)]
return(dv)
}
#t: tiempo que se demora en ejecutar un código
#def t: tiempo que se demora en recorrer la lista Ruts_validos
#Ruts_validos: Generar números de rut y almacenarlos en una lista
#Se generan 5000 números aleatorios entre 0:9999999 sin repetición
#Cada uno acompañado de su dv
t <- proc.time()
Ruts_validos <- list()
for(i in sample(0000000:9999999,5000,replace=F)){
rut<- print(paste(i,"-",dv(i)))
Ruts_validos<-c(Ruts_validos,rut)
}
proc.time() - t
#Tiempo que se demora en recorrer la lista Ruts_validos
> proc.time() - t
# inicializando la variable archivo con el nombre de mi pÃ¡gina
archivo <- 'PagWeb.html'
# Leyendo el HTML del archivo
webpage <- read_html(archivo)
# Extrayendo contenido en la clase justificado
contenidoWebNoticia <- html_nodes(webpage,'.justificado')
usando la libreria rvest
#
# 1.- Se realiza la bÃºsqueda y se copia la URL generada
# 2.- Se asigna la url generada a la variable paginaBookingCom
paginaBookingCom <- 'https://www.booking.com/searchresults.es.html?label=gen173nr-1FCAEoggI46AdIM1gEaC-IAQGYAQq4ARnIAQ_YAQHoAQH4AQuIAgGoAgM&lang=es&sid=654096c55a6b4e739ddbb6a39eb44e43&sb=1&src=searchresults&src_elem=sb&error_url=https%3A%2F%2Fwww.booking.com%2Fsearchresults.es.html%3Flabel%3Dgen173nr-1FCAEoggI46AdIM1gEaC-IAQGYAQq4ARnIAQ_YAQHoAQH4AQuIAgGoAgM%3Bsid%3D654096c55a6b4e739ddbb6a39eb44e43%3Btmpl%3Dsearchresults%3Bclass_interval%3D1%3Bdest_id%3D6125%3Bdest_type%3Dregion%3Bdtdisc%3D0%3Bfrom_sf%3D1%3Bgroup_adults%3D2%3Bgroup_children%3D0%3Binac%3D0%3Bindex_postcard%3D0%3Blabel_click%3Dundef%3Bno_rooms%3D1%3Boffset%3D0%3Bpostcard%3D0%3Broom1%3DA%252CA%3Bsb_price_type%3Dtotal%3Bshw_aparth%3D1%3Bslp_r_match%3D0%3Bsrc%3Dindex%3Bsrc_elem%3Dsb%3Bss%3Dchiloe%3Bss_all%3D0%3Bssb%3Dempty%3Bsshis%3D0%26%3B&ss=Chilo%C3%A9&is_ski_area=0&ssne=Chilo%C3%A9&ssne_untouched=Chilo%C3%A9&dest_id=6125&dest_type=region&checkin_monthday=3&checkin_month=1&checkin_year=2019&checkout_monthday=4&checkout_month=1&checkout_year=2019&group_adults=2&group_children=0&no_rooms=1&from_sf=1'
# ExtracciÃ³n del la info contenida en la clase sr-hotel__name
contenidoEnSrHotelName <- html_nodes(webpage,'.sr-hotel__name')
# 1.- Se realiza la bÃºsqueda y se copia la URL generada
# 2.- Se asigna la url generada a la variable paginaBookingCom
paginaBookingCom <- 'https://www.booking.com/searchresults.es.html?label=gen173nr-1FCAEoggI46AdIM1gEaC-IAQGYAQq4ARnIAQ_YAQHoAQH4AQuIAgGoAgM&lang=es&sid=654096c55a6b4e739ddbb6a39eb44e43&sb=1&src=searchresults&src_elem=sb&error_url=https%3A%2F%2Fwww.booking.com%2Fsearchresults.es.html%3Flabel%3Dgen173nr-1FCAEoggI46AdIM1gEaC-IAQGYAQq4ARnIAQ_YAQHoAQH4AQuIAgGoAgM%3Bsid%3D654096c55a6b4e739ddbb6a39eb44e43%3Btmpl%3Dsearchresults%3Bclass_interval%3D1%3Bdest_id%3D6125%3Bdest_type%3Dregion%3Bdtdisc%3D0%3Bfrom_sf%3D1%3Bgroup_adults%3D2%3Bgroup_children%3D0%3Binac%3D0%3Bindex_postcard%3D0%3Blabel_click%3Dundef%3Bno_rooms%3D1%3Boffset%3D0%3Bpostcard%3D0%3Broom1%3DA%252CA%3Bsb_price_type%3Dtotal%3Bshw_aparth%3D1%3Bslp_r_match%3D0%3Bsrc%3Dindex%3Bsrc_elem%3Dsb%3Bss%3Dchiloe%3Bss_all%3D0%3Bssb%3Dempty%3Bsshis%3D0%26%3B&ss=Chilo%C3%A9&is_ski_area=0&ssne=Chilo%C3%A9&ssne_untouched=Chilo%C3%A9&dest_id=6125&dest_type=region&checkin_monthday=3&checkin_month=1&checkin_year=2019&checkout_monthday=4&checkout_month=1&checkout_year=2019&group_adults=2&group_children=0&no_rooms=1&from_sf=1'
webpage <- read_html(paginaBookingCom)
# ExtracciÃ³n del la info contenida en la clase sr-hotel__name
contenidoEnSrHotelName <- html_nodes(webpage,'.sr-hotel__name')
# Viendo el primer elemento de la variable contenidoEnSrHotelName
print(contenidoEnSrHotelName[1])
# Pasando la informaciÃ³n contenida en contenidoEnSrHotelName
# a texto
textoBookingCom <- html_text(contenidoEnSrHotelName)
#Pasando la info a texto
print(textojumbo)
#Extrayendo contenido en la clase p1
contenidojumbo <- html_nodes(webpage,'p1')#Pasando la info a texto
source('C:/Users/Macarena Aburto/Downloads/r-extraccion-de-datos.R', echo=TRUE)
#Pasando la info a texto
print(textojumbo)
#Pasando la info a texto
print(textojumbo)
textojumbo <- html_text(contenidojumbo)
#Iniciando la variable archivo con el nombre de mi página
archivo<-'Pag.Web.html'
#Leyendo el HTML del archivo
webpage<-read_html(archivo)
#Leyendo el HTML del archivo
webpage<-read_html(archivo)
#Leyendo el HTML del archivo
webpage<-read_html(archivo)
Pag.Web
#Leyendo el HTML del archivo
webpage<-read_html(Pag.Web.html)
#Leyendo el HTML del archivo
webpage<-read_html(archivo)
#Leyendo el HTML del archivo
webpage<-read_html(archivo)
#Leyendo el HTML del archivo
webpage<-read_html(archivo)
setwd("~/")
# 1.- Se realiza la bÃºsqueda y se copia la URL generada
# 2.- Se asigna la url generada a la variable paginaBookingCom
paginaBookingCom <- 'https://www.booking.com/searchresults.es.html?label=gen173nr-1FCAEoggI46AdIM1gEaC-IAQGYAQq4ARnIAQ_YAQHoAQH4AQuIAgGoAgM&lang=es&sid=654096c55a6b4e739ddbb6a39eb44e43&sb=1&src=searchresults&src_elem=sb&error_url=https%3A%2F%2Fwww.booking.com%2Fsearchresults.es.html%3Flabel%3Dgen173nr-1FCAEoggI46AdIM1gEaC-IAQGYAQq4ARnIAQ_YAQHoAQH4AQuIAgGoAgM%3Bsid%3D654096c55a6b4e739ddbb6a39eb44e43%3Btmpl%3Dsearchresults%3Bclass_interval%3D1%3Bdest_id%3D6125%3Bdest_type%3Dregion%3Bdtdisc%3D0%3Bfrom_sf%3D1%3Bgroup_adults%3D2%3Bgroup_children%3D0%3Binac%3D0%3Bindex_postcard%3D0%3Blabel_click%3Dundef%3Bno_rooms%3D1%3Boffset%3D0%3Bpostcard%3D0%3Broom1%3DA%252CA%3Bsb_price_type%3Dtotal%3Bshw_aparth%3D1%3Bslp_r_match%3D0%3Bsrc%3Dindex%3Bsrc_elem%3Dsb%3Bss%3Dchiloe%3Bss_all%3D0%3Bssb%3Dempty%3Bsshis%3D0%26%3B&ss=Chilo%C3%A9&is_ski_area=0&ssne=Chilo%C3%A9&ssne_untouched=Chilo%C3%A9&dest_id=6125&dest_type=region&checkin_monthday=3&checkin_month=1&checkin_year=2019&checkout_monthday=4&checkout_month=1&checkout_year=2019&group_adults=2&group_children=0&no_rooms=1&from_sf=1'
webpage <- read_html(paginaBookingCom)
un <- " Porque La Llama Que llama Estando en llamas me llama, alguien mas llama "
b <- "  "
c <- " Porque la llama que llama me llama, alguien mas llama "
Contar <- strsplit ( a , b ) [[ 1 ]]
Contar2 <- strsplit ( c , b ) [[ 1 ]]
Contar <- strsplit ( a , b ) [[ 1 ]]
a<-" Porque la llama que llama estando en llamas me llama, alguien mas llama"
b<-" "
c<-"Porque la llama que llama estando en llamas me llama , alguien mas llama"
Contar<-strsplit(a,b)[[1]]
Contar2<-strsplit(c,b)[[1]]
Minuscula<-tolower(Contar)
Unico<-unique(Minuscula)
Minuscula2<-tolower(Contar2)
Unico2<-unique(Minuscula2)
#Test1
Contar
Minuscula
Unico
#Test2
Contar2
Minuscula2
Unico2
#Contado las palabras
ContandoLlamas<-list()
for(i in 1:length(Unico2)){
print(Unico2[i])
contador <- 0
for (y in 1:length(Minuscula2)){
print(Minuscula2[y])
if(Unico2[i]==Minuscula2[y]){
print(contador <- contador+1)
}
}
ContandoLlamas<-c(ContandoLlamas,contador)
}
# install.packages("rvest")
library('rvest')
library('rvest')
# Se asigna la url generada a la variable paginaVoyHoy
paginaVoyHoy <- 'https://www.voyhoy.com/blog/category/consejos-viajeros/'
#Leyendo el HTML del archivo
webpageblog <- read_html(paginaVoyHoy)
# Se asigna la url generada a la variable paginaVoyHoy
paginaVoyHoy <- 'https://www.voyhoy.com/blog/category/consejos-viajeros/'
webpageblog
#views (desde el html del blog)
<span class="views-hot" title="Views"><i class="post-icon icon-views"></i> 33893<meta itemprop="interactionCount" content="UserPageVisits:33893"></span>
# ExtracciÃ³n del texto contenido en la clase Views
contenidoViews <- html_nodes(webpageblog,'i')
# Se asigna la url generada a la variable paginaVoyHoy
paginaVoyHoy <- 'https://www.voyhoy.com/blog/category/consejos-viajeros/'
#views (desde el html del blog)
<span class="views-hot" title="Views"><i class="post-icon icon-views"></i> 33893<meta itemprop="interactionCount" content="UserPageVisits:33893"></span>
# ExtracciÃ³n del texto contenido en la clase Views
contenidoViews <- html_nodes(webpageblog,'i')
#views (desde el html del blog)
<span class="views-hot" title="Views"><i class="post-icon icon-views"></i> 33893<meta itemprop="interactionCount" content="UserPageVisits:33893"></span>
# ExtracciÃ³n del texto contenido en la clase Views
contenidoViews <- html_nodes(webpageblog,'i')
#views (desde el html del blog)
<span class="views-hot" title="Views"><i class="post-icon icon-views"></i> 33893<meta itemprop="interactionCount" content="UserPageVisits:33893"></span>
# ExtracciÃ³n del texto contenido en la clase Views
contenidoViews <- html_nodes(webpageblog,'i')
#views (desde el html del blog)
<span class="views-hot" title="Views"><i class="post-icon icon-views"></i> 33893<meta itemprop="interactionCount" content="UserPageVisits:33893"></span>
# ExtracciÃ³n del texto contenido en la clase Views
contenidoViews <- html_nodes(webpageblog,'i')
View(contenidoViews)
View(webpageblog)
View(contenidoViews)
View(contenidoViews)
# ExtracciÃ³n del texto contenido en la clase thumb-under
contenidoYapo <- html_nodes(webpageYapo,'.category')
# Contando palabras
unlistTextoYapo <- unlist(textoYapo)
# Proyecto: "Datos Viajeros BBB"
# install.packages("rvest")
library('rvest')
###### Exracción de información de la tabla (clima) ##############
# Se asigna la url generada a la variable paginaVoyHoyClima
paginaVoyHoyClima <- 'https://www.voyhoy.com/blog/mejor-epoca-visitar-san-pedro-atacama-clima-consejos-2-2/'
#Leyendo el HTML del archivo
webpagblogclima <- read_html(paginaVoyHoyClima)
#Extrayendo el contenido de la tabla a traves de tag
contenedorDeTablas <- html_nodes(webpagblogclima, "table")
# Extraccion informacion tabla 1
tabla1<- html_table(contenedorDeTablas  [[2]])
# Viendo el contenido de la posicion 1,2 de la tabla1
print(tabla1[1])
##################################################################
###### Creando grafico para el clima #############################
##################################################################
# Usando la libreria ggplot2
library('ggplot2')
# Grafico de barra con el clima temperatura mínima
tabla1 %>%
ggplot() +
aes(x = X1 , y = X3) +
geom_bar(stat="identity")
# Grafico de barra con el clima temperatura máxima
tabla1 %>%
ggplot() +
aes(x = X1 , y = X2) +
geom_bar(stat="identity")
# GrÃ¡fico boxplot con el clima temperatura mínima
tabla1 %>%
ggplot() +
geom_boxplot(aes(x = X1, y = X3)) +
theme_bw()
# GrÃ¡fico boxplot con el clima temperatura máxima
tabla1 %>%
ggplot() +
geom_boxplot(aes(x = X1, y = X2)) +
theme_bw()
##################################################################
###### Views por cada consejo ##############################
##################################################################
paginaconcuenta<-'https://www.voyhoy.com/blog/category/consejos-viajeros/'
webpagecuenta<- read_html(paginaconcuenta)
# Extraccion del texto contenido en la clase meta-views
cuentaviews<- html_nodes(webpagecuenta, ".meta-views")
textocuenta<- html_text(cuentaviews)
# viendo el contenido de la variable cuentaviews
print(textocuenta)
# install.packages("rvest")
library('rvest')
# Se asigna la url generada a la variable paginaVoyHoyClima
paginaVoyHoyClima <- 'https://www.voyhoy.com/blog/mejor-epoca-visitar-san-pedro-atacama-clima-consejos-2-2/'
#Leyendo el HTML del archivo
webpagblogclima <- read_html(paginaVoyHoyClima)
setwd("~/Datos-Viajeros-BBB")
#Leyendo el HTML del archivo
webpagblogclima <- read_html(paginaVoyHoyClima)
setwd("~/Datos-Viajeros-BBB")
setwd("~/Datos-Viajeros-BBB")
# Proyecto: "Datos Viajeros BBB"
# install.packages("rvest")
library('rvest')
###### Exracción de información de la tabla (clima) ##############
# Se asigna la url generada a la variable paginaVoyHoyClima
paginaVoyHoyClima <- 'https://www.voyhoy.com/blog/mejor-epoca-visitar-san-pedro-atacama-clima-consejos-2-2/'
#Leyendo el HTML del archivo
webpagblogclima <- read_html(paginaVoyHoyClima)
#Extrayendo el contenido de la tabla a traves de tag
contenedorDeTablas <- html_nodes(webpagblogclima, "table")
# Extraccion informacion tabla 1
tabla1<- html_table(contenedorDeTablas  [[2]])
# Viendo el contenido de la posicion 1,2 de la tabla1
print(tabla1[1])
##################################################################
###### Creando grafico para el clima #############################
##################################################################
# Usando la libreria ggplot2
library('ggplot2')
# Grafico de barra con el clima temperatura mínima
tabla1 %>%
ggplot() +
aes(x = X1 , y = X3) +
geom_bar(stat="identity")
# Grafico de barra con el clima temperatura máxima
tabla1 %>%
ggplot() +
aes(x = X1 , y = X2) +
geom_bar(stat="identity")
# GrÃ¡fico boxplot con el clima temperatura mínima
tabla1 %>%
ggplot() +
geom_boxplot(aes(x = X1, y = X3)) +
theme_bw()
# GrÃ¡fico boxplot con el clima temperatura máxima
tabla1 %>%
ggplot() +
geom_boxplot(aes(x = X1, y = X2)) +
theme_bw()
##################################################################
###### Extraer titulo de cada consejo #############################
##################################################################
# Se asigna la url generada a la variable paginaVoyHoyConsejos
paginaVoyHoyConsejos <- 'https://www.voyhoy.com/blog/category/consejos-viajeros/'
#leyendo el HTML del archivo
webpagConsejos <- read_html(paginaVoyHoyConsejos)
#Extrayendo contenido en la clase
textoConsejo <- html_nodes(webpagConsejos,".entry-title")
#Pasando la info a texto
textoConsejo <- html_text(contenidoConsejo)
# viendo el contenido de la variable cuentaviews
print(textoConsejo)
##################################################################
###### Views por cada consejo ##############################
##################################################################
paginaconcuenta<-'https://www.voyhoy.com/blog/category/consejos-viajeros/'
webpagecuenta<- read_html(paginaconcuenta)
# Extraccion del texto contenido en la clase meta-views
cuentaviews<- html_nodes(webpagecuenta, ".meta-views")
textocuenta<- html_text(cuentaviews)
# viendo el contenido de la variable cuentaviews
print(textocuenta)
# install.packages("rvest")
library('rvest')
# Se asigna la url generada a la variable paginaVoyHoyClima
paginaVoyHoyClima <- 'https://www.voyhoy.com/blog/mejor-epoca-visitar-san-pedro-atacama-clima-consejos-2-2/'
#Leyendo el HTML del archivo
webpagblogclima <- read_html(paginaVoyHoyClima)
# install.packages("rvest")
library('rvest')
# Se asigna la url generada a la variable paginaVoyHoyClima
paginaVoyHoyClima <- 'https://www.voyhoy.com/blog/mejor-epoca-visitar-san-pedro-atacama-clima-consejos-2-2/'
#Leyendo el HTML del archivo
webpagblogclima <- read_html(paginaVoyHoyClima)
#Extrayendo el contenido de la tabla a traves de tag
contenedorDeTablas <- html_nodes(webpagblogclima, "table")
# Extraccion informacion tabla 1
tabla1<- html_table(contenedorDeTablas  [[2]])
# Viendo el contenido de la posicion 1,2 de la tabla1
print(tabla1[1])
setwd("~/Datos-Viajeros-BBB")
# Proyecto: "Datos Viajeros BBB"
# install.packages("rvest")
library('rvest')
###### Exracción de información de la tabla (clima) ##############
# Se asigna la url generada a la variable paginaVoyHoyClima
paginaVoyHoyClima <- 'https://www.voyhoy.com/blog/mejor-epoca-visitar-san-pedro-atacama-clima-consejos-2-2/'
#Leyendo el HTML del archivo
webpagblogclima <- read_html(paginaVoyHoyClima)
#Extrayendo el contenido de la tabla a traves de tag
contenedorDeTablas <- html_nodes(webpagblogclima, "table")
# Extraccion informacion tabla 1
tabla1<- html_table(contenedorDeTablas  [[2]])
# Viendo el contenido de la posicion 1,2 de la tabla1
print(tabla1[1])
##################################################################
###### Creando grafico para el clima #############################
##################################################################
# Usando la libreria ggplot2
library('ggplot2')
# Grafico de barra con el clima temperatura mínima
tabla1 %>%
ggplot() +
aes(x = X1 , y = X3) +
geom_bar(stat="identity")
# Grafico de barra con el clima temperatura máxima
tabla1 %>%
ggplot() +
aes(x = X1 , y = X2) +
geom_bar(stat="identity")
# GrÃ¡fico boxplot con el clima temperatura mínima
tabla1 %>%
ggplot() +
geom_boxplot(aes(x = X1, y = X3)) +
theme_bw()
# GrÃ¡fico boxplot con el clima temperatura máxima
tabla1 %>%
ggplot() +
geom_boxplot(aes(x = X1, y = X2)) +
theme_bw()
##################################################################
###### Views por cada consejo ##############################
##################################################################
paginaconcuenta<-'https://www.voyhoy.com/blog/category/consejos-viajeros/'
webpagecuenta<- read_html(paginaconcuenta)
# Extraccion del texto contenido en la clase meta-views
cuentaviews<- html_nodes(webpagecuenta, ".meta-views")
textocuenta<- html_text(cuentaviews)
# viendo el contenido de la variable cuentaviews
print(textocuenta)
View(tabla1)
View(tabla1)
